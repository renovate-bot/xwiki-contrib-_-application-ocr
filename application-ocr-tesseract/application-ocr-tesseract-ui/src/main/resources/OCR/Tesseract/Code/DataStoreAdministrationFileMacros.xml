<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="OCR.Tesseract.Code.DataStoreAdministrationFileMacros" locale="">
  <web>OCR.Tesseract.Code</web>
  <name>DataStoreAdministrationFileMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1516920948000</creationDate>
  <parent>xwiki:OCR.Tesseract.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1518217146000</date>
  <contentUpdateDate>1518212348000</contentUpdateDate>
  <version>1.1</version>
  <title>DataStoreAdministrationFileMacros</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#set ($discard = $xwiki.jsx.use('OCR.Tesseract.Code.DataStoreAdministrationFileMacros'))

#macro(displayLocalFiles)
  {{html clean="false"}}
    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;td width="30%"&gt;$services.localization.render('ocr.tesseract.store.language')&lt;/td&gt;
          &lt;td width="50%"&gt;$services.localization.render('ocr.tesseract.store.localPath')&lt;/td&gt;
          &lt;td width="20%"&gt;$services.localization.render('ocr.tesseract.store.actions')&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody class="tesseractLocalDataFilesTable"&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  {{/html}}
#end

#macro(displayRemoteFiles)
  {{html clean="false"}}
    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;td width="80%"&gt;$services.localization.render('ocr.tesseract.store.language')&lt;/td&gt;
          &lt;td width="20%"&gt;$services.localization.render('ocr.tesseract.store.actions')&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody class="tesseractRemoteDataFilesTable"&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  {{/html}}
#end
{{/velocity}}</content>
  <object>
    <name>OCR.Tesseract.Code.DataStoreAdministrationFileMacros</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>0be919d7-9afe-4e45-808e-2477d3fc8d27</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-meta'], function ($, xm) {
  $(document).ready(function() {
    var localDataFilesTable = $(".tesseractLocalDataFilesTable"),
        remoteDataFilesTable = $(".tesseractRemoteDataFilesTable");

    var noLocalDataFilesAvailable = "$services.localization.render('ocr.tesseract.noLocalDataFiles')",
        noRemoteDataFilesAvailable = "$services.localization.render('ocr.tesseract.noRemoteDataFiles')",
        downloadDataFileButton = "&lt;a href='#' class='downloadTessDataFileButton'&gt;$escapetool.javascript($services.icon.renderHTML('down')) $services.localization.render('ocr.tesseract.store.actions.download')&lt;/a&gt;",
        removeDataFileButton = "&lt;a href='#' class='removeTessDataFileButton'&gt;$escapetool.javascript($services.icon.renderHTML('cross')) $services.localization.render('ocr.tesseract.store.actions.remove')&lt;/a&gt;";

    var dataStoreFileServiceURL = new XWiki.Document(XWiki.Model.resolve('OCR.Tesseract.Code.DataStoreScriptService', XWiki.EntityType.DOCUMENT)).getURL('get', 'outputSyntax=plain');

    var refreshLocalDataFilesTable = (function(localFiles) {
      localDataFilesTable.empty();
      localFiles.forEach(function(e) {
        localDataFilesTable.append('&lt;tr data-language="' + e.id + '"&gt;&lt;td&gt;' + e.prettyName + '&lt;/td&gt;&lt;td&gt;' + e.path + '&lt;/td&gt;&lt;td&gt;' + removeDataFileButton + '&lt;/td&gt;&lt;/tr&gt;');
      });
      if (localFiles.length == 0) {
        localDataFilesTable.append('&lt;tr&gt;&lt;td colspan="3"&gt;' + noLocalDataFilesAvailable + '&lt;/td&gt;&lt;/tr&gt;');
      }
    });

    var refreshRemoteDataFilesTable = (function(remoteFiles) {
      remoteDataFilesTable.empty();
      remoteFiles.forEach(function(e) {
        remoteDataFilesTable.append('&lt;tr data-language="' + e.id + '"&gt;&lt;td&gt;&lt;a href="' + e.url + '"&gt;' + e.prettyName + '&lt;/a&gt;&lt;/td&gt;&lt;td&gt;' + downloadDataFileButton + '&lt;/td&gt;&lt;/tr&gt;');
      });
      if (remoteFiles.length == 0) {
        remoteDataFilesTable.append('&lt;tr&gt;&lt;td colspan="2"&gt;' + noRemoteDataFilesAvailable + '&lt;/td&gt;&lt;/tr&gt;');
      }

      // Define "Download" events
      remoteDataFilesTable.find('a.downloadTessDataFileButton').click(function() {
        var rowElement = $(this).parent().parent();
        $.get(dataStoreFileServiceURL, { action: "downloadDataFile", language: rowElement.attr('data-language') }).done(function(data) {
          window.location.reload();
        });
        return false;
      });
    });

    var refreshDataFilesTables = (function() {
      $.when($.get(dataStoreFileServiceURL, { action: "listLocalDataFiles" }, "json"),
             $.get(dataStoreFileServiceURL, { action: "listRemoteDataFiles" }, "json")).done(function(localFiles, remoteFiles) {
        // Remove duplicates from the remote files list
        remoteFiles[0].forEach(function(remoteFile, index) {
          if (localFiles[0].find(function(localFile) { return localFile.id === remoteFile.id; })) {
            remoteFiles[0].splice(index, 1);
          }
        });
        refreshLocalDataFilesTable(localFiles[0]);
        refreshRemoteDataFilesTable(remoteFiles[0]);
      });
    });

    refreshDataFilesTables();
  });
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
